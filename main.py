import random
import datetime

from Database import DatabaseInterface

# this is just an on-going list, not for actual use
["Caesar Salad",
"Fajitas",
"Enchiladas",
"Thai Sliders",
"Shrimp Masala",
"Pasta Salad",
"Lasagna",
"Spice Rub Grilled Chicken",
"Salad Nicoise",
"Thai Coconut Curry",
"Lentil Soup",
"Chili (Turkey or Beef)",
"Tofu Enchilada Casserole",
"Ruben Sandwiches",
"Twice Baked Potatoes",
"Kung Pao Chicken"]

class Query:
  def query_season(query_string: str, meals: list) -> list:
    results = []
    for meal in meals:
      if meal['season'] == query_string:
        results.append(meal)
    return results

  def query_category(query_string: str, meals: list) -> list:
    results = []
    for meal in meals:
      if meal['category'] == query_string:
        results.append(meal)
    return results

class Recommender:
  def __init__(self, *args, **kwargs):
    return super().__init__(*args, **kwargs)

  def get_season(self, month):
    '''Returns the season string from the current month'''
    if (month >= 6 and month <= 8):
      return 'SUMMER'
    elif (month >= 9 and month <= 10):
      return 'FALL'
    elif (month >= 3 and month <= 5):
      return 'SPRING'
    elif (month >= 11 or month < 3):
      return 'WINTER'
  
  def recommendation(self, data):
    '''Returns a random meal from a current season query'''
    now = datetime.datetime.now()
    season = self.get_season(now.month)
    list_season = Query.query_season(season, data)
    if (len(list_season) == 0):
      return None
    return get_random_meal(list_season)

def get_random_meal(meal_list):
  '''Returns random meal object from a list'''
  index = 0 if len(meal_list) == 1 else random.randint(1, len(meal_list) - 1)
  return meal_list[index]

def get_meal_from_user():
  '''Returns meal object that was generated by user'''
  name = input("Name: ")
  category = input("Category: ")
  season = input("Season: ")
  location = input("Location: ")
  time = int(input("Est. Time (mins): "))
  ingredients = []
  tags = []
  print("Type 'done' when done")
  while True:
    ingred = input("Ingredient: ")
    if (ingred == 'done'):
      break
    ingredients.append(ingred)
  while True:
    tag = input("Tag: ")
    if (tag == 'done'):
      break
    tags.append(tag)
  meal = {}
  meal['name'] = name
  meal['category'] = category
  meal['season'] = season
  meal['location'] = location
  meal['time'] = time
  meal['ingredients'] = ingredients
  meal['last_suggested'] = 0
  meal['tags'] = tags
  return meal

def print_meal(meal):
  '''Prints out a single meal cleary'''
  print(meal['name'] + ' - ' + str(meal['time']) + ' mins')
  print(meal['category'] + ', ' + meal['season'])
  print("Find recipe in: " + meal['location'])
  print("Ingredients:")
  for ingred in meal['ingredients']:
    print(ingred)
  print()

def print_list(data):
  '''Cleanly prints out a given list of meals'''
  i = 0
  for entry in data:
    print(str(i) + ":")
    print_meal(entry)
    i += 1

def repl():
  '''Main REPL loop for the program'''
  while True:
    data = DatabaseInterface.get_json_data('database.json')
    user_input = input("Option: ")
    print()
    if (user_input == 'exit'):
      return
    if (user_input == 'l'):
      print_list(data['meals'])
    elif (user_input == 'q'):
      query_input = input("Query: ")
      result = Query.query_category(query_input, data['meals'])
      print_list(result)
    elif (user_input == 'a'):
      meal = get_meal_from_user()
      meal['id'] = len(data['meals'])
      data['meals'].append(meal)

      DatabaseInterface.write_json_data(data)
      print()
      print("Added Meal:")
      print_meal(meal)
    elif (user_input == 'r'):
      meal = get_random_meal(data['meals'])
      print_meal(meal)
    elif (user_input == 'rr'):
      r = Recommender()
      meal = r.recommendation(data['meals'])
      print_meal(meal)

def run():
  print("Welcome to Dinner Time!")
  print("exit - to exit")
  print("l - to list meals in DB")
  print("q - to query")
  print("a - to add a meal")
  print("r - for random meal")
  print("rr - for recommended meal")
  print()

  repl()

run()
